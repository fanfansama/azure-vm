---
- hosts: all
  become: true
  become_method: sudo

  vars:
    terraform_version: 0.12.0
    azure_environment: public
    azure_cloud_map:
      public: AzureCloud
      usgovernment: AzureUSGovernment
      german: AzureGermanCloud
      china: AzureChinaCloud

  pre_tasks:
  - name: check for file custom_vars.yml
    stat:
      path: custom_vars.yml
    register: stat_custom_vars
  - name: load custom vars, if existent
    include_vars:
      file: custom_vars.yml
    when: stat_custom_vars.stat.exists

  roles:
  - andrelohmann.root_colored_prompt
  - andrelohmann.terraform
  - andrelohmann.azurecli
  - andrelohmann.terrahelp
  - andrelohmann.terrahelper

  tasks:
  - name: install required packages
    apt:
      pkg: "{{ item }}"
      state: latest
      allow_unauthenticated: yes
      autoclean: yes
      autoremove: yes
    with_items:
    - git
    - htop

  - name: set git global user.name
    git_config:
      name: user.name
      scope: global
      value: "{{ git_global_user_name }}"
    become: yes
    become_user: vagrant

  - name: set git global user.email
    git_config:
      name: user.email
      scope: global
      value: "{{ git_global_user_email }}"
    become: yes
    become_user: vagrant

  - name: copy private key files
    copy:
      src: "private_keys/{{ item }}"
      dest: "/home/vagrant/.ssh/{{ item }}"
      owner: vagrant
      group: vagrant
      mode: 0600
    with_items: "{{ private_key_files }}"

  - name: create terraform folder
    file:
      path: /vagrant/terraform
      state: directory
      owner: vagrant
      group: vagrant
      mode: 0775

  - name: link the terraform folder to /home/vagrant
    file:
      src: /vagrant/terraform
      dest: /home/vagrant/terraform
      owner: vagrant
      group: vagrant
      state: link

  - name: clone terraform repository
    git:
      repo: "{{ terraform_template_repo }}"
      dest: /vagrant/terraform
    become: yes
    become_user: vagrant

  - name: create terraform state folder
    file:
      path: /vagrant/terraform_state
      state: directory
      owner: vagrant
      group: vagrant
      mode: 0775

  - name: link the terraform_state folder to /home/vagrant
    file:
      src: /vagrant/terraform_state
      dest: /home/vagrant/terraform_state
      owner: vagrant
      group: vagrant
      state: link

  - name: clone terraform state repository
    git:
      repo: "{{ terraform_state_repo }}"
      dest: /home/vagrant/terraform_state
      accept_hostkey: yes
    become: yes
    become_user: vagrant

  - name: create login script
    template:
      src: az_login.sh.j2
      dest: /home/vagrant/az_login.sh
      owner: vagrant
      group: vagrant
      mode: 0755

  - name: set az login script
    blockinfile:
      path: "/home/vagrant/.profile"
      block: |
        # run az login
        /home/vagrant/az_login.sh

      marker: "# {mark} run az login"

  - name: set terraform environment variables
    blockinfile:
      path: "/home/vagrant/.profile"
      block: |
        # Terraform Environment Variables for Azure Provider Access
        export ARM_ENVIRONMENT={{ azure_environment }}
        export ARM_TENANT_ID={{ azure_tenant_id }}
        export ARM_SUBSCRIPTION_ID={{ azure_subscription_id }}
        export ARM_CLIENT_ID={{ azure_client_id }}
        export ARM_CLIENT_SECRET={{ azure_client_secret }}

      marker: "# {mark} terraform environment variables"

  - name: set terraform aliases
    blockinfile:
      path: "/home/vagrant/.profile"
      block: |
        ### Terraform aliases

        # terraform init
        alias tfi='terrahelper init '

        # terraform plan
        alias tfp='terrahelper plan '

        # terraform apply
        alias tfa='terrahelper apply '

        # terraform destroy
        alias tfd='terrahelper destroy '

        # terraform output
        alias tfo='terrahelper output '

      marker: "# {mark} terraform aliases"

  - name: set terrahelper environment variables
    blockinfile:
      path: "/home/vagrant/.profile"
      block: |
        # Terrahelper Environment Variables
        export TH_SECRET="{{ terraform_state_secret }}"
        export TH_STATE_DIRECTORY=/home/vagrant/terraform_state
        export TH_STATE_FILE=terraform.tfstate
        export TH_STATE_FILE_BACKUP=terraform.tfstate.backup

      marker: "# {mark} terrahelper environment variables"
